[
    {
        "paper": "arXiv-2103.12607v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "What is the average F1 score achieved by the ESCORT method on detecting six vulnerability types?",
        "answer": "The ESCORT method achieves an average F1 score of 95% on detecting six vulnerability types.",
        "reference": "Title: ESCORT: Ethereum Smart COntRacTs Vulnerability Detection using Deep Neural Network and Transfer Learning; Section: Abstract - \\\"Experimental results show that \\\\sys{} achieves an average F1 score of \\\\textcolor{red}{95\\\\%} on six vulnerability types.\\\""
    },
    {
        "paper": "arXiv-2103.12607v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "How long does it take for the ESCORT method to perform vulnerability detection for a single smart contract?",
        "answer": "The ESCORT method takes 0.02 seconds per contract to perform vulnerability detection.",
        "reference": "Title: ESCORT: Ethereum Smart COntRacTs Vulnerability Detection using Deep Neural Network and Transfer Learning; Section: Abstract - \\\"the detection time is $0.02$ seconds per contract.\\\""
    },
    {
        "paper": "arXiv-2107.11598v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "What is the accuracy of the proposed method in detecting infinite loop vulnerabilities?",
        "answer": "The proposed method, CGE, achieves an accuracy of 83.21% in detecting infinite loop vulnerabilities.",
        "reference": "Combining Graph Neural Networks with Expert Knowledge for Smart Contract Vulnerability Detection, Section: Abstract. \\\"...where the detection accuracy of our method reaches {89.15\\\\%, 89.02\\\\%, and 83.21\\\\%} for reentrancy, timestamp dependence, and infinite loop vulnerabilities, respectively.\\\""
    },
    {
        "paper": "arXiv-2107.11598v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "How many functions are there in the VNT Chain (VSC) dataset?",
        "answer": "The VNT Chain (VSC) dataset contains 13,761 functions.",
        "reference": "Combining Graph Neural Networks with Expert Knowledge for Smart Contract Vulnerability Detection, Section: Experimental Settings. \\\"The \\\\texttt{VSC} dataset contains $13,761$ functions, which are collected from all the available $4,170$ smart contracts in the VNT Chain network.\\\""
    },
    {
        "paper": "arXiv-2309.08474v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "What is the composition of the dataset used in the VulnSense paper?",
        "answer": "The dataset used in the VulnSense paper is composed of a total of 1,769 smart contracts, derived from the combination of three datasets: Smartbugs Curated, SolidiFI-Benchmark, and Smartbugs Wild. It includes 547 non-vulnerable contracts, 631 contracts with Arithmetic vulnerabilities, and 591 contracts with Reentrancy vulnerabilities.",
        "reference": "Reference: VulnSense: Efficient Vulnerability Detection in Ethereum Smart Contracts by Multimodal Learning with Graph Neural Network and Language Model. Section: Experiments and Analysis and Table 1."
    },
    {
        "paper": "arXiv-2309.08474v1.tex",
        "topic": "data",
        "subtopic": "data-related content",
        "question": "What is the average accuracy achieved by the VulnSense framework in detecting vulnerabilities in smart contracts?",
        "answer": "The VulnSense framework achieved an average accuracy of 77.96% in detecting vulnerabilities across all three categories of vulnerable smart contracts.",
        "reference": "Reference: VulnSense: Efficient Vulnerability Detection in Ethereum Smart Contracts by Multimodal Learning with Graph Neural Network and Language Model. Abstract section: \\\"The experimental outcomes demonstrate the superior performance of our proposed approach, achieving an average accuracy of 77.96% across all three categories of vulnerable smart contracts.\\\""
    }
]